package multithread.ref;

import java.awt.Toolkit;//사용자 인터페이스 작성및 그래픽스 이미지의 페인트용의 모든클래스

/*
운영체제는 실행중인 프로그램을 프로세스로 관리한다
멀티 태스킹이란 두가지 이상의 작업을 동시에 처리하는것을 말한다
이때 운영체제는 멀티 프로세스를 생성해서 처리한다
하지만 멀티태스킹이 꼭 멀티 프로세스를 뜻하지는 않는다

하지만 멀티태스킹이 꼭 멀티프로세스를 뜻하지는 않는다
예를 메신저는 채팅작업을 하면서 동시에 파일 전송작업을 수행합니다

하나의 프로세스가 두가지 이상의 작업을 처리할수 있는 이유는
멀티 스레드가 있기 때문이다
스레드는 코드의 실행흐름을 말하는데
프로세스내에 스레드가 두개 라면 
두개의 코드 실행 흐름이 생긴다는 의미입니다

멀티 프로세스가 프로그램 단위의 멀티 태스킹이라면 
멀티 스레드는 프로그램 내부의 멀티 태스킹이라고 볼수 있다

멀티 프로세스들은 서로 독립적이므로 하나의 프로세스에서 오류가 발생해도
다른 프로세스에게 영향을 미치지 않는다
예를 들어 워드와 엑셀을 동시에 사용하는 도중에 워드에 오류가 생겨 먹통이 되더라도
엑셀은 여전히 가능하다
그러나 멀티스레드로 동작하는 메신저의 경우 
파일을 전송하는 스레드에서 예외가 발생하면
메신저 프로세스 자체가 종료되기 때문에 채팅스레드도 같이 종료된다
그렇기 때문에 멀티 스레드를 사용할경우에는 예외 처리에 만전을 기해야 한다

멀티 스레드는 데이터를 분할해서 병렬로 처리하는 곳에서 사용하기도 하고
안드로이드 웹에서 내트워트 통신을 하기 위해 사용하기도 한다
또한 다수의 클라이언트 요청을 처리하는 서버를 개발할때도 사용된다

java21부터 가상스레드 기능이 추가 되었다
아래에서는 스레드 운영체제 스레드와 운영체제의 스레드1개 매핑되면서 
실행된다

가상 스레드를 사용하면 제한된 운영체제의 스레드를 효율적으로 사용하면서
여러작업을 동시에 처리하는 동시성 애플리케이션에 속도를 항상시킬수 있다

Thread클래스로 직접 생성
Thread thread = new Thread(Runnable target);

Runnable 이란 스레드가 작업을 실행할때 사용하는 인터페이스 이다
Runnable에는 run()메소드가 정의되어 있는데 
구현 클래스는 run()을 재정의 해서 스레드가 실행할 코드를 가지고 
있어야 한다

class Task implements Runnable{
@Override
public void run(){
//스레드가 실행할 코드
}

Runnable 구현클래스는 작업 내용을 정의한것 이므로 스레드에 전달을 해야 한다
Runnable 구현 객체를 생성한후 Thread생성자 매개값으로 
Runnable객체를 아래와 같이 전달한다

Runnable task = new Task();
Thread thread = new Thread(task)

명시적인 Runnable구현 클래스를 작성하지 않고 Thread생성자를 호출할때
Runnable 익명 구현객체를 매개값으로 사용할수 있다

Thread thread = new Thread(new Runnable(){
@Override
public void run(){}
});

스레드가 생성되어도 start를 실행해야함

start메소드가 호출되면 다음 작업스레드가 생성되고 
작업스레드는 매개값으로 받은 Runnable의 run()메소드를 
실행하면서 작업을 처리한다

*/

public class Intro {

	public static void main(String[] args) {
		
		Toolkit toolkit = Toolkit.getDefaultToolkit();
		for (int i=0; i < 5; i++) {
			toolkit.beep();//비프음 발생
			try {Thread.sleep(500);}catch(Exception e) {}
			//0.5초간 일시 정지
		}
		for (int i =0; i < 5; i++) {
			System.out.println("띵");
			try {Thread.sleep(500);}catch(Exception e) {}
			//0.5초간 일시 정지
		}
		/* 모든 자바프로그램은 메인스레드가 main()메소드를 실행하면서 시작된다
		첫 코드부터 순차적으로 실행하고 마지막 코드를 실행하거나 return문을 만나면 실행을 종료
		메인 스레드는 필요에 따라 추가작업 스레드를 만들어서 실행할수 있다
		싱글스레드에서는 메인 스레드가 종료되면 프로세스도 종료된다
		멀티스레드 에서는 실행중인 스레드가 하나라도 있다면
		프로세스는 종료되지 않는다
		메인스레드가 작업 스레드보다 먼저 종료되더라도 
		작업 스레드가 계속 실행 중이라면 프로세스는 종료되지 않는다
		*/
		

	}

}
